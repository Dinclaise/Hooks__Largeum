import React, { useEffect, Fragment } from 'react';
import {stringify} from 'query-string';

import {getPaginator, limit} from 'utils';
import useFetch from 'hooks/useFetch';
import Loading from 'components/loading';
import ErrorMessage from 'components/errorMassage';
import Feed from 'components/feed';
import Pagination from 'components/pagination';

const getApiUrl = ({username, offset, isFavorites}) => {
    const params = isFavorites 
        ? {limit, offset, favorited: username} 
        : {limit, offset, author: username}

        return `/articles/${stringify(params)}`
}

const UserName = ({username, location, isFavorites, url}) => {
    const {offset, currentPage} = getPaginator(location.search);
    const apiUrl = getApiUrl({username, offset, isFavorites});
    const [{response, error, isLoading}, doFetch] = useFetch(apiUrl);


    useEffect(() => {
        doFetch()
    }, [doFetch, isFavorites]);

    return(
        <div>
            {isLoading && <Loading />}
            {error && <ErrorMessage/>}
            {!isLoading && response && (
                <Fragment>
                    <Feed articles={response.articles}/>
                    <Pagination 
                        total={response.articleCount} 
                        limit={limit} 
                        url={url} 
                        currentPage={currentPage}
                    />
                </Fragment>
            )}
        </div>

    )
}

export default UserName